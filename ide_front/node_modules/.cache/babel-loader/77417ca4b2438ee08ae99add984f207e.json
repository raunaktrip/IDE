{"ast":null,"code":"ace.define(\"ace/mode/doc_comment_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var DocCommentHighlightRules = function () {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment.doc.tag\",\n        regex: \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n\n      }, DocCommentHighlightRules.getTagRule(), {\n        defaultToken: \"comment.doc\",\n        caseInsensitive: true\n      }]\n    };\n  };\n\n  oop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\n  DocCommentHighlightRules.getTagRule = function (start) {\n    return {\n      token: \"comment.doc.tag.storage.type\",\n      regex: \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n  };\n\n  DocCommentHighlightRules.getStartRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // doc comment\n      regex: \"\\\\/\\\\*(?=\\\\*)\",\n      next: start\n    };\n  };\n\n  DocCommentHighlightRules.getEndRule = function (start) {\n    return {\n      token: \"comment.doc\",\n      // closing comment\n      regex: \"\\\\*\\\\/\",\n      next: start\n    };\n  };\n\n  exports.DocCommentHighlightRules = DocCommentHighlightRules;\n});\nace.define(\"ace/mode/c_cpp_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/doc_comment_highlight_rules\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\n  var cFunctions = exports.cFunctions = \"\\\\b(?:hypot(?:f|l)?|s(?:scanf|ystem|nprintf|ca(?:nf|lb(?:n(?:f|l)?|ln(?:f|l)?))|i(?:n(?:h(?:f|l)?|f|l)?|gn(?:al|bit))|tr(?:s(?:tr|pn)|nc(?:py|at|mp)|c(?:spn|hr|oll|py|at|mp)|to(?:imax|d|u(?:l(?:l)?|max)|k|f|l(?:d|l)?)|error|pbrk|ftime|len|rchr|xfrm)|printf|et(?:jmp|vbuf|locale|buf)|qrt(?:f|l)?|w(?:scanf|printf)|rand)|n(?:e(?:arbyint(?:f|l)?|xt(?:toward(?:f|l)?|after(?:f|l)?))|an(?:f|l)?)|c(?:s(?:in(?:h(?:f|l)?|f|l)?|qrt(?:f|l)?)|cos(?:h(?:f)?|f|l)?|imag(?:f|l)?|t(?:ime|an(?:h(?:f|l)?|f|l)?)|o(?:s(?:h(?:f|l)?|f|l)?|nj(?:f|l)?|pysign(?:f|l)?)|p(?:ow(?:f|l)?|roj(?:f|l)?)|e(?:il(?:f|l)?|xp(?:f|l)?)|l(?:o(?:ck|g(?:f|l)?)|earerr)|a(?:sin(?:h(?:f|l)?|f|l)?|cos(?:h(?:f|l)?|f|l)?|tan(?:h(?:f|l)?|f|l)?|lloc|rg(?:f|l)?|bs(?:f|l)?)|real(?:f|l)?|brt(?:f|l)?)|t(?:ime|o(?:upper|lower)|an(?:h(?:f|l)?|f|l)?|runc(?:f|l)?|gamma(?:f|l)?|mp(?:nam|file))|i(?:s(?:space|n(?:ormal|an)|cntrl|inf|digit|u(?:nordered|pper)|p(?:unct|rint)|finite|w(?:space|c(?:ntrl|type)|digit|upper|p(?:unct|rint)|lower|al(?:num|pha)|graph|xdigit|blank)|l(?:ower|ess(?:equal|greater)?)|al(?:num|pha)|gr(?:eater(?:equal)?|aph)|xdigit|blank)|logb(?:f|l)?|max(?:div|abs))|di(?:v|fftime)|_Exit|unget(?:c|wc)|p(?:ow(?:f|l)?|ut(?:s|c(?:har)?|wc(?:har)?)|error|rintf)|e(?:rf(?:c(?:f|l)?|f|l)?|x(?:it|p(?:2(?:f|l)?|f|l|m1(?:f|l)?)?))|v(?:s(?:scanf|nprintf|canf|printf|w(?:scanf|printf))|printf|f(?:scanf|printf|w(?:scanf|printf))|w(?:scanf|printf)|a_(?:start|copy|end|arg))|qsort|f(?:s(?:canf|e(?:tpos|ek))|close|tell|open|dim(?:f|l)?|p(?:classify|ut(?:s|c|w(?:s|c))|rintf)|e(?:holdexcept|set(?:e(?:nv|xceptflag)|round)|clearexcept|testexcept|of|updateenv|r(?:aiseexcept|ror)|get(?:e(?:nv|xceptflag)|round))|flush|w(?:scanf|ide|printf|rite)|loor(?:f|l)?|abs(?:f|l)?|get(?:s|c|pos|w(?:s|c))|re(?:open|e|ad|xp(?:f|l)?)|m(?:in(?:f|l)?|od(?:f|l)?|a(?:f|l|x(?:f|l)?)?))|l(?:d(?:iv|exp(?:f|l)?)|o(?:ngjmp|cal(?:time|econv)|g(?:1(?:p(?:f|l)?|0(?:f|l)?)|2(?:f|l)?|f|l|b(?:f|l)?)?)|abs|l(?:div|abs|r(?:int(?:f|l)?|ound(?:f|l)?))|r(?:int(?:f|l)?|ound(?:f|l)?)|gamma(?:f|l)?)|w(?:scanf|c(?:s(?:s(?:tr|pn)|nc(?:py|at|mp)|c(?:spn|hr|oll|py|at|mp)|to(?:imax|d|u(?:l(?:l)?|max)|k|f|l(?:d|l)?|mbs)|pbrk|ftime|len|r(?:chr|tombs)|xfrm)|to(?:b|mb)|rtomb)|printf|mem(?:set|c(?:hr|py|mp)|move))|a(?:s(?:sert|ctime|in(?:h(?:f|l)?|f|l)?)|cos(?:h(?:f|l)?|f|l)?|t(?:o(?:i|f|l(?:l)?)|exit|an(?:h(?:f|l)?|2(?:f|l)?|f|l)?)|b(?:s|ort))|g(?:et(?:s|c(?:har)?|env|wc(?:har)?)|mtime)|r(?:int(?:f|l)?|ound(?:f|l)?|e(?:name|alloc|wind|m(?:ove|quo(?:f|l)?|ainder(?:f|l)?))|a(?:nd|ise))|b(?:search|towc)|m(?:odf(?:f|l)?|em(?:set|c(?:hr|py|mp)|move)|ktime|alloc|b(?:s(?:init|towcs|rtowcs)|towc|len|r(?:towc|len))))\\\\b\";\n\n  var c_cppHighlightRules = function () {\n    var keywordControls = \"break|case|continue|default|do|else|for|goto|if|_Pragma|\" + \"return|switch|while|catch|operator|try|throw|using\";\n    var storageType = \"asm|__asm__|auto|bool|_Bool|char|_Complex|double|enum|float|\" + \"_Imaginary|int|int8_t|int16_t|int32_t|int64_t|long|short|signed|size_t|struct|typedef|uint8_t|uint16_t|uint32_t|uint64_t|union|unsigned|void|\" + \"class|wchar_t|template|char16_t|char32_t\";\n    var storageModifiers = \"const|extern|register|restrict|static|volatile|inline|private|\" + \"protected|public|friend|explicit|virtual|export|mutable|typename|\" + \"constexpr|new|delete|alignas|alignof|decltype|noexcept|thread_local\";\n    var keywordOperators = \"and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|typeid|xor|xor_eq|\" + \"const_cast|dynamic_cast|reinterpret_cast|static_cast|sizeof|namespace\";\n    var builtinConstants = \"NULL|true|false|TRUE|FALSE|nullptr\";\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n      \"keyword.control\": keywordControls,\n      \"storage.type\": storageType,\n      \"storage.modifier\": storageModifiers,\n      \"keyword.operator\": keywordOperators,\n      \"variable.language\": \"this\",\n      \"constant.language\": builtinConstants\n    }, \"identifier\");\n    var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\n    var escapeRe = /\\\\(?:['\"?\\\\abfnrtv]|[0-7]{1,3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}U[a-fA-F\\d]{8}|.)/.source;\n    var formatRe = \"%\" + /(\\d+\\$)?/.source // field (argument #)\n    + /[#0\\- +']*/.source // flags\n    + /[,;:_]?/.source // separator character (AltiVec)\n    + /((-?\\d+)|\\*(-?\\d+\\$)?)?/.source // minimum field width\n    + /(\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?/.source // precision\n    + /(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)?/.source // length modifier\n    + /(\\[[^\"\\]]+\\]|[diouxXDOUeEfFgGaACcSspn%])/.source; // conversion type\n\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"//$\",\n        next: \"start\"\n      }, {\n        token: \"comment\",\n        regex: \"//\",\n        next: \"singleLineComment\"\n      }, DocCommentHighlightRules.getStartRule(\"doc-start\"), {\n        token: \"comment\",\n        // multi line comment\n        regex: \"\\\\/\\\\*\",\n        next: \"comment\"\n      }, {\n        token: \"string\",\n        // character\n        regex: \"'(?:\" + escapeRe + \"|.)?'\"\n      }, {\n        token: \"string.start\",\n        regex: '\"',\n        stateName: \"qqstring\",\n        next: [{\n          token: \"string\",\n          regex: /\\\\\\s*$/,\n          next: \"qqstring\"\n        }, {\n          token: \"constant.language.escape\",\n          regex: escapeRe\n        }, {\n          token: \"constant.language.escape\",\n          regex: formatRe\n        }, {\n          token: \"string.end\",\n          regex: '\"|$',\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"string.start\",\n        regex: 'R\"\\\\(',\n        stateName: \"rawString\",\n        next: [{\n          token: \"string.end\",\n          regex: '\\\\)\"',\n          next: \"start\"\n        }, {\n          defaultToken: \"string\"\n        }]\n      }, {\n        token: \"constant.numeric\",\n        // hex\n        regex: \"0[xX][0-9a-fA-F]+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n      }, {\n        token: \"keyword\",\n        // pre-compiler directives\n        regex: \"#\\\\s*(?:include|import|pragma|line|define|undef)\\\\b\",\n        next: \"directive\"\n      }, {\n        token: \"keyword\",\n        // special case pre-compiler directive\n        regex: \"#\\\\s*(?:endif|if|ifdef|else|elif|ifndef)\\\\b\"\n      }, {\n        token: \"support.function.C99.c\",\n        regex: cFunctions\n      }, {\n        token: keywordMapper,\n        regex: \"[a-zA-Z_$][a-zA-Z0-9_$]*\"\n      }, {\n        token: \"keyword.operator\",\n        regex: /--|\\+\\+|<<=|>>=|>>>=|<>|&&|\\|\\||\\?:|[*%\\/+\\-&\\^|~!<>=]=?/\n      }, {\n        token: \"punctuation.operator\",\n        regex: \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: \"\\\\s+\"\n      }],\n      \"comment\": [{\n        token: \"comment\",\n        // closing comment\n        regex: \"\\\\*\\\\/\",\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"singleLineComment\": [{\n        token: \"comment\",\n        regex: /\\\\$/,\n        next: \"singleLineComment\"\n      }, {\n        token: \"comment\",\n        regex: /$/,\n        next: \"start\"\n      }, {\n        defaultToken: \"comment\"\n      }],\n      \"directive\": [{\n        token: \"constant.other.multiline\",\n        regex: /\\\\/\n      }, {\n        token: \"constant.other.multiline\",\n        regex: /.*\\\\/\n      }, {\n        token: \"constant.other\",\n        regex: \"\\\\s*<.+?>\",\n        next: \"start\"\n      }, {\n        token: \"constant.other\",\n        // single line\n        regex: '\\\\s*[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]',\n        next: \"start\"\n      }, {\n        token: \"constant.other\",\n        // single line\n        regex: \"\\\\s*['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\",\n        next: \"start\"\n      }, {\n        token: \"constant.other\",\n        regex: /[^\\\\\\/]+/,\n        next: \"start\"\n      }]\n    };\n    this.embedRules(DocCommentHighlightRules, \"doc-\", [DocCommentHighlightRules.getEndRule(\"start\")]);\n    this.normalizeRules();\n  };\n\n  oop.inherits(c_cppHighlightRules, TextHighlightRules);\n  exports.c_cppHighlightRules = c_cppHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (require, exports, module) {\n  \"use strict\";\n\n  var Range = require(\"../range\").Range;\n\n  var MatchingBraceOutdent = function () {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n\n  var Range = require(\"../../range\").Range;\n\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n\n      return fw;\n    };\n\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n\n        return range;\n      }\n\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n\n        endRow = row;\n      }\n\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n\n      var endRow = row;\n\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/c_cpp\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/c_cpp_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/range\", \"ace/mode/behaviour/cstyle\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n\n  var TextMode = require(\"./text\").Mode;\n\n  var c_cppHighlightRules = require(\"./c_cpp_highlight_rules\").c_cppHighlightRules;\n\n  var MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\n  var Range = require(\"../range\").Range;\n\n  var CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\n\n  var CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\n  var Mode = function () {\n    this.HighlightRules = c_cppHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n      var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n      var tokens = tokenizedLine.tokens;\n      var endState = tokenizedLine.state;\n\n      if (tokens.length && tokens[tokens.length - 1].type == \"comment\") {\n        return indent;\n      }\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      } else if (state == \"doc-start\") {\n        if (endState == \"start\") {\n          return \"\";\n        }\n\n        var match = line.match(/^\\s*(\\/?)\\*/);\n\n        if (match) {\n          if (match[1]) {\n            indent += \" \";\n          }\n\n          indent += \"* \";\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/c_cpp\";\n    this.snippetFileId = \"ace/snippets/c_cpp\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n\n(function () {\n  ace.require([\"ace/mode/c_cpp\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();","map":{"version":3,"names":["ace","define","require","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","$rules","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","start","getStartRule","next","getEndRule","cFunctions","c_cppHighlightRules","keywordControls","storageType","storageModifiers","keywordOperators","builtinConstants","keywordMapper","$keywords","createKeywordMapper","identifierRe","escapeRe","source","formatRe","stateName","embedRules","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id","snippetFileId"],"sources":["C:/Users/PRIYANK TRIPATHI/Desktop/webd/ide_front/ide_front/node_modules/ace-builds/src-noconflict/mode-c_cpp.js"],"sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/c_cpp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar DocCommentHighlightRules = require(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\nvar cFunctions = exports.cFunctions = \"\\\\b(?:hypot(?:f|l)?|s(?:scanf|ystem|nprintf|ca(?:nf|lb(?:n(?:f|l)?|ln(?:f|l)?))|i(?:n(?:h(?:f|l)?|f|l)?|gn(?:al|bit))|tr(?:s(?:tr|pn)|nc(?:py|at|mp)|c(?:spn|hr|oll|py|at|mp)|to(?:imax|d|u(?:l(?:l)?|max)|k|f|l(?:d|l)?)|error|pbrk|ftime|len|rchr|xfrm)|printf|et(?:jmp|vbuf|locale|buf)|qrt(?:f|l)?|w(?:scanf|printf)|rand)|n(?:e(?:arbyint(?:f|l)?|xt(?:toward(?:f|l)?|after(?:f|l)?))|an(?:f|l)?)|c(?:s(?:in(?:h(?:f|l)?|f|l)?|qrt(?:f|l)?)|cos(?:h(?:f)?|f|l)?|imag(?:f|l)?|t(?:ime|an(?:h(?:f|l)?|f|l)?)|o(?:s(?:h(?:f|l)?|f|l)?|nj(?:f|l)?|pysign(?:f|l)?)|p(?:ow(?:f|l)?|roj(?:f|l)?)|e(?:il(?:f|l)?|xp(?:f|l)?)|l(?:o(?:ck|g(?:f|l)?)|earerr)|a(?:sin(?:h(?:f|l)?|f|l)?|cos(?:h(?:f|l)?|f|l)?|tan(?:h(?:f|l)?|f|l)?|lloc|rg(?:f|l)?|bs(?:f|l)?)|real(?:f|l)?|brt(?:f|l)?)|t(?:ime|o(?:upper|lower)|an(?:h(?:f|l)?|f|l)?|runc(?:f|l)?|gamma(?:f|l)?|mp(?:nam|file))|i(?:s(?:space|n(?:ormal|an)|cntrl|inf|digit|u(?:nordered|pper)|p(?:unct|rint)|finite|w(?:space|c(?:ntrl|type)|digit|upper|p(?:unct|rint)|lower|al(?:num|pha)|graph|xdigit|blank)|l(?:ower|ess(?:equal|greater)?)|al(?:num|pha)|gr(?:eater(?:equal)?|aph)|xdigit|blank)|logb(?:f|l)?|max(?:div|abs))|di(?:v|fftime)|_Exit|unget(?:c|wc)|p(?:ow(?:f|l)?|ut(?:s|c(?:har)?|wc(?:har)?)|error|rintf)|e(?:rf(?:c(?:f|l)?|f|l)?|x(?:it|p(?:2(?:f|l)?|f|l|m1(?:f|l)?)?))|v(?:s(?:scanf|nprintf|canf|printf|w(?:scanf|printf))|printf|f(?:scanf|printf|w(?:scanf|printf))|w(?:scanf|printf)|a_(?:start|copy|end|arg))|qsort|f(?:s(?:canf|e(?:tpos|ek))|close|tell|open|dim(?:f|l)?|p(?:classify|ut(?:s|c|w(?:s|c))|rintf)|e(?:holdexcept|set(?:e(?:nv|xceptflag)|round)|clearexcept|testexcept|of|updateenv|r(?:aiseexcept|ror)|get(?:e(?:nv|xceptflag)|round))|flush|w(?:scanf|ide|printf|rite)|loor(?:f|l)?|abs(?:f|l)?|get(?:s|c|pos|w(?:s|c))|re(?:open|e|ad|xp(?:f|l)?)|m(?:in(?:f|l)?|od(?:f|l)?|a(?:f|l|x(?:f|l)?)?))|l(?:d(?:iv|exp(?:f|l)?)|o(?:ngjmp|cal(?:time|econv)|g(?:1(?:p(?:f|l)?|0(?:f|l)?)|2(?:f|l)?|f|l|b(?:f|l)?)?)|abs|l(?:div|abs|r(?:int(?:f|l)?|ound(?:f|l)?))|r(?:int(?:f|l)?|ound(?:f|l)?)|gamma(?:f|l)?)|w(?:scanf|c(?:s(?:s(?:tr|pn)|nc(?:py|at|mp)|c(?:spn|hr|oll|py|at|mp)|to(?:imax|d|u(?:l(?:l)?|max)|k|f|l(?:d|l)?|mbs)|pbrk|ftime|len|r(?:chr|tombs)|xfrm)|to(?:b|mb)|rtomb)|printf|mem(?:set|c(?:hr|py|mp)|move))|a(?:s(?:sert|ctime|in(?:h(?:f|l)?|f|l)?)|cos(?:h(?:f|l)?|f|l)?|t(?:o(?:i|f|l(?:l)?)|exit|an(?:h(?:f|l)?|2(?:f|l)?|f|l)?)|b(?:s|ort))|g(?:et(?:s|c(?:har)?|env|wc(?:har)?)|mtime)|r(?:int(?:f|l)?|ound(?:f|l)?|e(?:name|alloc|wind|m(?:ove|quo(?:f|l)?|ainder(?:f|l)?))|a(?:nd|ise))|b(?:search|towc)|m(?:odf(?:f|l)?|em(?:set|c(?:hr|py|mp)|move)|ktime|alloc|b(?:s(?:init|towcs|rtowcs)|towc|len|r(?:towc|len))))\\\\b\";\n\nvar c_cppHighlightRules = function() {\n\n    var keywordControls = (\n        \"break|case|continue|default|do|else|for|goto|if|_Pragma|\" +\n        \"return|switch|while|catch|operator|try|throw|using\"\n    );\n    \n    var storageType = (\n        \"asm|__asm__|auto|bool|_Bool|char|_Complex|double|enum|float|\" +\n        \"_Imaginary|int|int8_t|int16_t|int32_t|int64_t|long|short|signed|size_t|struct|typedef|uint8_t|uint16_t|uint32_t|uint64_t|union|unsigned|void|\" +\n        \"class|wchar_t|template|char16_t|char32_t\"\n    );\n\n    var storageModifiers = (\n        \"const|extern|register|restrict|static|volatile|inline|private|\" +\n        \"protected|public|friend|explicit|virtual|export|mutable|typename|\" +\n        \"constexpr|new|delete|alignas|alignof|decltype|noexcept|thread_local\"\n    );\n\n    var keywordOperators = (\n        \"and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|typeid|xor|xor_eq|\" +\n        \"const_cast|dynamic_cast|reinterpret_cast|static_cast|sizeof|namespace\"\n    );\n\n    var builtinConstants = (\n        \"NULL|true|false|TRUE|FALSE|nullptr\"\n    );\n\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword.control\" : keywordControls,\n        \"storage.type\" : storageType,\n        \"storage.modifier\" : storageModifiers,\n        \"keyword.operator\" : keywordOperators,\n        \"variable.language\": \"this\",\n        \"constant.language\": builtinConstants\n    }, \"identifier\");\n\n    var identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\n    var escapeRe = /\\\\(?:['\"?\\\\abfnrtv]|[0-7]{1,3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}U[a-fA-F\\d]{8}|.)/.source;\n    var formatRe = \"%\"\n          + /(\\d+\\$)?/.source // field (argument #)\n          + /[#0\\- +']*/.source // flags\n          + /[,;:_]?/.source // separator character (AltiVec)\n          + /((-?\\d+)|\\*(-?\\d+\\$)?)?/.source // minimum field width\n          + /(\\.((-?\\d+)|\\*(-?\\d+\\$)?)?)?/.source // precision\n          + /(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)?/.source // length modifier\n          + /(\\[[^\"\\]]+\\]|[diouxXDOUeEfFgGaACcSspn%])/.source; // conversion type\n\n    this.$rules = { \n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"//$\",\n                next : \"start\"\n            }, {\n                token : \"comment\",\n                regex : \"//\",\n                next : \"singleLineComment\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // character\n                regex : \"'(?:\" + escapeRe + \"|.)?'\"\n            }, {\n                token : \"string.start\",\n                regex : '\"', \n                stateName: \"qqstring\",\n                next: [\n                    { token: \"string\", regex: /\\\\\\s*$/, next: \"qqstring\" },\n                    { token: \"constant.language.escape\", regex: escapeRe },\n                    { token: \"constant.language.escape\", regex: formatRe },\n                    { token: \"string.end\", regex: '\"|$', next: \"start\" },\n                    { defaultToken: \"string\"}\n                ]\n            }, {\n                token : \"string.start\",\n                regex : 'R\"\\\\(', \n                stateName: \"rawString\",\n                next: [\n                    { token: \"string.end\", regex: '\\\\)\"', next: \"start\" },\n                    { defaultToken: \"string\"}\n                ]\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n            }, {\n                token : \"keyword\", // pre-compiler directives\n                regex : \"#\\\\s*(?:include|import|pragma|line|define|undef)\\\\b\",\n                next  : \"directive\"\n            }, {\n                token : \"keyword\", // special case pre-compiler directive\n                regex : \"#\\\\s*(?:endif|if|ifdef|else|elif|ifndef)\\\\b\"\n            }, {\n                token : \"support.function.C99.c\",\n                regex : cFunctions\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\"\n            }, {\n                token : \"keyword.operator\",\n                regex : /--|\\+\\+|<<=|>>=|>>>=|<>|&&|\\|\\||\\?:|[*%\\/+\\-&\\^|~!<>=]=?/\n            }, {\n              token : \"punctuation.operator\",\n              regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken : \"comment\"\n            }\n        ],\n        \"singleLineComment\" : [\n            {\n                token : \"comment\",\n                regex : /\\\\$/,\n                next : \"singleLineComment\"\n            }, {\n                token : \"comment\",\n                regex : /$/,\n                next : \"start\"\n            }, {\n                defaultToken: \"comment\"\n            }\n        ],\n        \"directive\" : [\n            {\n                token : \"constant.other.multiline\",\n                regex : /\\\\/\n            },\n            {\n                token : \"constant.other.multiline\",\n                regex : /.*\\\\/\n            },\n            {\n                token : \"constant.other\",\n                regex : \"\\\\s*<.+?>\",\n                next : \"start\"\n            },\n            {\n                token : \"constant.other\", // single line\n                regex : '\\\\s*[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]',\n                next : \"start\"\n            }, \n            {\n                token : \"constant.other\", // single line\n                regex : \"\\\\s*['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\",\n                next : \"start\"\n            },\n            {\n                token : \"constant.other\",\n                regex : /[^\\\\\\/]+/,\n                next : \"start\"\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    this.normalizeRules();\n};\n\noop.inherits(c_cppHighlightRules, TextHighlightRules);\n\nexports.c_cppHighlightRules = c_cppHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(require, exports, module) {\n\"use strict\";\n\nvar Range = require(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../../lib/oop\");\nvar Range = require(\"../../range\").Range;\nvar BaseFoldMode = require(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/c_cpp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/c_cpp_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(require, exports, module) {\n\"use strict\";\n\nvar oop = require(\"../lib/oop\");\nvar TextMode = require(\"./text\").Mode;\nvar c_cppHighlightRules = require(\"./c_cpp_highlight_rules\").c_cppHighlightRules;\nvar MatchingBraceOutdent = require(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = require(\"../range\").Range;\nvar CstyleBehaviour = require(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = require(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = c_cppHighlightRules;\n\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        } else if (state == \"doc-start\") {\n            if (endState == \"start\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/c_cpp\";\n    this.snippetFileId = \"ace/snippets/c_cpp\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});                (function() {\n                    ace.require([\"ace/mode/c_cpp\"], function(m) {\n                        if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n                            module.exports = m;\n                        }\n                    });\n                })();\n            "],"mappings":"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"},"metadata":{},"sourceType":"script"}